# This is the main configuration file for the application.
# ~~~~~
application.name=SayMetrix

login.twitter=ciarant

deadbolt.handler=controllers.SayMetrixDeadboltHandler
deadbolt.cache-user-per-request=true

# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.
application.mode=dev

# SayMetrix Development Setup - CHANGE IF YOU LIKE BUT DO NOT COMMIT ANY MODIFICATIONS
# ~~~~~
%dev.db.url=jdbc:mysql://localhost/saym_dev
%dev.db.driver=com.mysql.jdbc.Driver
%dev.db.user=root
%dev.db.pass=root
%dev.http.path=
%dev.application.secret=OQbpSNA6ke2LQW6A29cA6KUWBbzVnJk5prJ6gFv4bHiDNUXC3HMxHGZO2gmD53Uf
# Enable the following if you want to test with memcached
#%dev.memcached=enabled
#%dev.memcached.host=localhost:11211
%dev.login.twitter=telecoms
# Enable press if you want to button icons to load correctly
%dev.press.enabled=true
# Uncomment if you want to test evolutions without JPA interfering
%dev.jpa.ddl=none
%dev.application.log.path=/log4j.properties

# SayMetrix AWS Beta Demo Setup - DO NOT MODIFY
# ~~~~~
%saym-beta.application.mode=prod
%saym-beta.db.url=jdbc:mysql://db1.cdmgwc7pvus3.eu-west-1.rds.amazonaws.com/saym_beta
%saym-beta.db.driver=com.mysql.jdbc.Driver
%saym-beta.db.user=saym_beta
%saym-beta.db.pass=saym_beta
%saym-beta.http.path=/beta
%saym-beta.http.port=9600
%saym-beta.application.secret=WeyAUe6fLIAxYkvmM44mr3sstX6BIgLMc2RhzhOepyDOUeECnsOZhr3QQosEESD5
%saym-beta.application.baseUrl=https://saymetrix.danutech.com/beta
%saym-beta.memcached=enabled
%saym-beta.memcached.host=saymetrix.6ocbm8.cfg.euw1.cache.amazonaws.com:11211
%saym-beta.mail.smtp.host=127.0.0.1
%saym-beta.login.twitter=telecoms
%saym-beta.application.log.path=/log4j-saym-beta.properties

# SayMetrix AWS Demo Setup - DO NOT MODIFY
# ~~~~~
%saym-demo.application.mode=prod
%saym-demo.db.url=jdbc:mysql://db1.cdmgwc7pvus3.eu-west-1.rds.amazonaws.com/saym_demo
%saym-demo.db.driver=com.mysql.jdbc.Driver
%saym-demo.db.user=saym_demo
%saym-demo.db.pass=saym_demo
%saym-demo.http.path=/demo
%saym-demo.http.port=9500
%saym-demo.application.secret=zwxO6KoQGllemGbC63t9PNd0WYCs3PtmzzLzWawa3zyD2uGJvpnL0iwN07Zkdi6P
%saym-demo.application.baseUrl=https://saymetrix.danutech.com/demo
%saym-demo.memcached=enabled
%saym-demo.memcached.host=saymetrix.6ocbm8.cfg.euw1.cache.amazonaws.com:11211
%saym-demo.mail.smtp.host=127.0.0.1
%saym-demo.login.twitter=telecoms
%saym-demo.application.log.path=/log4j-saym-demo.properties

# Vodafone Ireland AWS Production Setup - DO NOT MODIFY
# ~~~~~
%saym-vfie.application.mode=prod
%saym-vfie.db.url=jdbc:mysql://db1.cdmgwc7pvus3.eu-west-1.rds.amazonaws.com/saym_vfie_demo
%saym-vfie.db.driver=com.mysql.jdbc.Driver
%saym-vfie.db.user=saym_vfie_demo
%saym-vfie.db.pass=saym_vfie_demo
%saym-vfie.http.path=/vfie
%saym-vfie.http.port=9000
%saym-vfie.application.secret=TRkboOrMtVzpJQZrclYQUWI7K8cxbd9bFV4iRYD7cwR8moOAAuoOhDjqKR8g9P4C
%saym-vfie.application.baseUrl=htts://smart.danutech.com/vfie
%saym-vfie.memcached=enabled
%saym-vfie.memcached.host=saymetrix.6ocbm8.cfg.euw1.cache.amazonaws.com:11211
%saym-vfie.mail.smtp.host=127.0.0.1
%saym-vfie.login.twitter=VodafoneIreland
%saym-vfie.application.log.path=/log4j-saym-vfie.properties

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions
# If you deploy your application to several instances be sure to use the same key !
application.secret=Wz6HHGCWaWFAtwd3paKv5h8KCiu3mqE4OuDAIrkYnnogYEEJFZhb5JK3rngkaTCC

# i18n
# ~~~~~
# Define locales used by your application.
# You can then place localized messages in conf/messages.{locale} files
# application.langs=fr,en,ja

# Date format
# ~~~~~
date.format=yyyy-MM-dd
# date.format.fr=dd/MM/yyyy

# Server configuration
# ~~~~~
# If you need to change the HTTP port, uncomment this (default is set to 9000)
# http.port=9000
#
# By default the server listen for HTTP on the wilcard address.
# You can restrict this.
# http.address=127.0.0.1
#
# Use this if you don't host your Play application at the root of the domain
# you're serving it from. This parameter has no effect when deployed as a
# war, because the path will be handled by the application server.
# http.path=/
%vfie.http.path=

# Session configuration
# ~~~~~~~~~~~~~~~~~~~~~~
# By default, session will be written to the transient PLAY_SESSION cookie.
# The cookies are not secured by default, only set it to true
# if you're serving your pages through https.
# application.session.cookie=PLAY
# application.session.maxAge=1h
# application.session.secure=false
application.session.cookie=SAYM
application.session.httpOnly=true

# Session/Cookie sharing between subdomain
# ~~~~~~~~~~~~~~~~~~~~~~
# By default a cookie is only valid for a specific domain. By setting
# application.defaultCookieDomain to '.example.com', the cookies
# will be valid for all domains ending with '.example.com', ie:
# foo.example.com and bar.example.com
# application.defaultCookieDomain=.example.com

# JVM configuration
# ~~~~~
# Define which port is used by JPDA when application is in debug mode (default is set to 8000)
# jpda.port=8000
#
# Java source level => 1.5, 1.6 or 1.7 (experimental)
# java.source=1.5

# Log level
# ~~~~~
# Specify log level for your application.
# If you want a very customized log, create a log4j.properties file in the conf directory
# application.log=INFO
#
# More logging configuration
application.log.path=/log4j.properties
# application.log.system.out=off

# Database configuration
# ~~~~~
# Enable a database engine if needed.
#
# To quickly set up a development database, use either:
#   - mem : for a transient in memory database (H2 in memory)
#   - fs  : for a simple file written database (H2 file stored)
# db=mem
#
# To connect to a local MySQL5 database, use:
# db=mysql://user:pwd@host/database
#
# To connect to a local PostgreSQL9 database, use:
# db=postgres://user:pwd@host/database
#
# If you need a full JDBC configuration use the following :
# db.url=jdbc:postgresql:database_name
# db.driver=org.postgresql.Driver
# db.user=root
# db.pass=secret
#
# Connections pool configuration :
# db.pool.timeout=1000
# db.pool.maxSize=30
# db.pool.minSize=10
#
# If you want to reuse an existing Datasource from your application server, use:
# db=java:/comp/env/jdbc/myDatasource
#
# When using an existing Datasource, it's sometimes needed to destroy it when
# the application is stopped. Depending on the datasource, you can define a
# generic "destroy" method :
# db.destroyMethod=close

# JPA Configuration (Hibernate)
# ~~~~~
#
# Specify the custom JPA dialect to use here (default to guess):
# jpa.dialect=org.hibernate.dialect.PostgreSQLDialect
#
# Specify the ddl generation pattern to use. Set to none to disable it
# (default to update in DEV mode, and none in PROD mode):
# jpa.ddl=update
#
# Debug SQL statements (logged using DEBUG level):
# jpa.debugSQL=true
#
# You can even specify additional hibernate properties here:
# hibernate.use_sql_comments=true
# ...
#
# Store path for Blob content
attachments.path=data/attachments

# Memcached configuration
# ~~~~~
# Enable memcached if needed. Otherwise a local cache is used.
# memcached=enabled
#
# Specify memcached host (default to 127.0.0.1:11211)
# memcached.host=127.0.0.1:11211
#
# Or you can specify multiple host to build a distributed cache
# memcached.1.host=127.0.0.1:11211
# memcached.2.host=127.0.0.1:11212
#
# Use plain SASL to authenticate for memcached
# memcached.user=
# memcached.password=

# HTTP Response headers control for static files
# ~~~~~
# Set the default max-age, telling the user's browser how long it should cache the page.
# Default is 3600 (one hour). Set it to 0 to send no-cache.
# This is only read in prod mode, in dev mode the cache is disabled.
# http.cacheControl=3600

# If enabled, Play will generate entity tags automatically and send a 304 when needed.
# Default is true, set it to false to deactivate use of entity tags.
# http.useETag=true

# Custom mime types
# mimetype.xpi=application/x-xpinstall

# WS configuration
# ~~~~~
# Default engine is Async Http Client, uncomment to use
# the JDK's internal implementation
# webservice = urlfetch
# If you need to set proxy params for WS requests
# http.proxyHost = localhost
# http.proxyPort = 3128
# http.proxyUser = jojo
# http.proxyPassword = jojo

# Mail configuration
# ~~~~~
# Default is to use a mock Mailer
mail.smtp=mock

# Or, specify mail host configuration
# mail.smtp.host=127.0.0.1
# mail.smtp.user=admin
# mail.smtp.pass=
# mail.smtp.channel=ssl

# Url-resolving in Jobs
# ~~~~~~
# When rendering templates with reverse-url-resoling (@@{..}) in Jobs (which do not have an inbound Http.Request),
# ie if sending a HtmlMail, Play need to know which url your users use when accessing your app.
# %test.application.baseUrl=http://localhost:9000/

# Jobs executor
# ~~~~~~
# Size of the Jobs pool
# play.jobs.pool=10

# Execution pool
# ~~~~~
# Default to 1 thread in DEV mode or (nb processors + 1) threads in PROD mode.
# Try to keep a low as possible. 1 thread will serialize all requests (very useful for debugging purpose)
# play.pool=3

# Open file from errors pages
# ~~~~~
# If your text editor supports opening files by URL, Play! will
# dynamically link error pages to files
#
# Example, for textmate:
# play.editor=txmt://open?url=file://%s&line=%s

# Testing. Set up a custom configuration for test mode
# ~~~~~

#%test.module.cobertura=${play.path}/modules/cobertura
%test.application.mode=dev
%test.db.url=jdbc:h2:mem:play;MODE=MySQL;LOCK_MODE=0;DB_CLOSE_ON_EXIT=FALSE
%test.jpa.ddl=create-drop
%test.mail.smtp=mock
%test.evolutions.enabled=false
